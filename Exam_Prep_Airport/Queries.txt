INSERT INTO Passengers(FullName,Email)
SELECT CONCAT(FirstName,' ',LastName),
CONCAT (FirstName,LastName,'@gmail.com')
FROM Pilots WHERE Id >= 5 AND Id<=15

UPDATE Aircraft SET Condition = 'A' WHERE (Condition = 'B' OR Condition = 'C')
AND (FlightHours IS NULL OR FlightHours<=100) AND (Year >=2013)

DELETE Passengers WHERE (LEN(FullName)<=10) 

SELECT Manufacturer,Model,FlightHours,Condition FROM Aircraft 
ORDER BY FlightHours DESC
	
SELECT FirstName,LastName,a.Manufacturer,a.Model,a.FlightHours FROM Pilots AS p
JOIN PilotsAircraft AS pa ON p.Id = pa.PilotId
JOIN Aircraft AS a ON a.Id = pa.AircraftId
WHERE a.FlightHours IS NOT NULL AND a.FlightHours < 304
ORDER BY a.FlightHours DESC,p.FirstName

SELECT TOP(20) fd.Id AS DestinationId,Start,p.FullName,a.AirportName,fd.TicketPrice 
FROM FlightDestinations AS fd
JOIN Airports AS a ON fd.AirportId = a.Id
JOIN Passengers AS p ON fd.PassengerId = p.Id
WHERE DATEPART(DAY,Start) % 2 = 0 
ORDER BY TicketPrice DESC,AirportName 

SELECT fd.AircraftId,a.Manufacturer,a.FlightHours,COUNT(fd.Id) AS FlightDestinationsCount,ROUND(AVG(fd.TicketPrice),2) AS AvgPrice
FROM Aircraft AS a
JOIN FlightDestinations AS fd ON a.Id = fd.AircraftId
GROUP BY fd.AircraftId,a.FlightHours,a.Manufacturer,a.Id
HAVING COUNT(fd.Id) >= 2
ORDER BY COUNT(fd.Id) DESC,a.Id


SELECT p.FullName,COUNT(a.Id) AS CountOfAircraft, SUM(fd.TicketPrice) AS TotalPayed 
FROM Passengers AS p
JOIN FlightDestinations AS fd ON p.Id = fd.PassengerId
JOIN Aircraft AS a ON fd.AircraftId = a.Id
WHERE SUBSTRING(p.FullName,2,1) = 'a'
GROUP BY p.Id,p.FullName
HAVING COUNT(a.Id) > 1
ORDER BY p.FullName

SELECT AirportName,Start AS DayTime,fd.TicketPrice,p.FullName,arc.Manufacturer,arc.Model 
FROM Airports AS a
JOIN FlightDestinations AS fd ON a.Id = fd.AirportId
JOIN Passengers AS p ON fd.PassengerId = p.Id
JOIN Aircraft AS arc ON fd.AircraftId = arc.Id
WHERE DATEPART(HOUR,Start) >=6.00 AND DATEPART(HOUR,Start) <=20.00
AND TicketPrice > 2500
ORDER BY arc.Model

CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(50))
RETURNS INT AS
BEGIN
	DECLARE @destinationsCount INT;
	SET @destinationsCount = (
	SELECT
		COUNT(fd.ID) 
	FROM Passengers AS p
	JOIN FlightDestinations AS fd ON p.Id = fd.PassengerId
	WHERE p.Email= @email
	GROUP BY p.Id
	);	
	IF @destinationsCount IS NULL
	SET @destinationsCount = 0
	RETURN @destinationsCount
	END;

CREATE PROC usp_SearchByAirportName @airportName VARCHAR(70)
AS
BEGIN
SELECT 
a.AirportName
,p.FullName
,CASE 
	WHEN fd.TicketPrice <=400 THEN 'Low'
	WHEN fd.TicketPrice > 400 AND fd.TicketPrice <=1500 THEN 'Medium'
	ELSE 'High'
END AS LevelOfTickerPrice
,arc.Manufacturer
,arc.Condition
,[at].TypeName
FROM Airports AS a
JOIN FlightDestinations AS fd ON a.Id = fd.AirportId
JOIN Passengers AS p ON fd.PassengerId = p.Id
JOIN Aircraft AS arc ON fd.AircraftId = arc.Id
JOIN AircraftTypes As [at] ON arc.TypeId = [at].Id
WHERE a.AirportName = @airportName
ORDER BY arc.Manufacturer,p.FullName
END